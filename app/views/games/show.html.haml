= render 'shared/flash'
%section.game-container.d-flex.h-100.overflow-hidden
  / Sidebar
  %aside.sidebar.bg-dark.text-white.p-3.d-flex.flex-column
    

    %h2.mb-3 Game Info
    %p
      %strong Game Name:
      = @game.name
    %p
      %strong Join Code:
      = @game.join_code
    %p
      %strong Current Turn:
      - if @game.current_turn_user
        = @game.current_turn_user.name
      - else
        Not started

    %h3.mt-4 Players
    %ul
      - @game_users.each do |game_user|
        %li= "#{game_user.user.name} (Health: #{game_user.health})"

    %button#inventory_button.btn.btn-secondary.mt-3{ "data-bs-toggle" => "modal", "data-bs-target" => "#inventoryModal" }
      Inventory
    
    = link_to 'Back to Landing Page', landing_path

    / GPT Response Field
    %div.gpt-response.bg-secondary.text-white.p-3.mt-4.flex-grow-1.overflow-auto
      %h4 GPT Response
      %p#chatbot-response.mb-0
        -# Placeholder for GPT response text
        No response yet.

  / Main Content Area
  %main.content-area.flex-grow-1.p-3.d-flex.flex-column
    / GPT Image Placeholder
    %div.gpt-image-box.position-relative.mb-3.bg-light
      %button#map_button.btn.btn-primary.position-absolute.top-0.end-0.m-2{ "data-bs-toggle" => "modal", "data-bs-target" => "#mapModal" }
        View Map
      %div.square-container.d-flex.align-items-center.justify-content-center
        %p.text-muted.mb-0 GPT-generated images will appear here.

    / Editable User Input Field
    %div.user-input.mt-3
      = form_with url: chat_game_path(@game), local: true, data: { type: :json }, id: 'chat-form' do |form|
        .mb-3
          = form.label :message, 'Your Response', class: 'form-label fw-bold'
          = form.text_area :message, id: 'user-message', class: 'form-control', rows: 3, placeholder: 'Type your message here...'
        = form.submit 'Send', class: 'btn btn-primary'

  %script
    :javascript
      document.addEventListener('DOMContentLoaded', () => {
        const form = document.getElementById('chat-form');
        const responseField = document.getElementById('chatbot-response');

        if (form) {
          form.addEventListener('submit', async (event) => {
            event.preventDefault();

            const message = document.getElementById('user-message').value;
            const url = form.getAttribute('action');

            try {
              const response = await fetch(url, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'Accept': 'application/json'
                },
                body: JSON.stringify({ message }),
              });

              const data = await response.json();
              if (data.response) {
                responseField.textContent = data.response;
              } else if (data.error) {
                responseField.textContent = `Error: ${data.error}`;
              } else {
                responseField.textContent = 'An error occurred.';
              }
            } catch (error) {
              responseField.textContent = 'Failed to fetch response.';
            }
          });
        } else {
          console.error('Chat form not found on the page.');
        }
      });



  / Map Modal
  .modal.fade#mapModal{ tabindex: "-1", "aria-labelledby" => "mapModalLabel", "aria-hidden" => "true" }
    .modal-dialog.modal-lg
      .modal-content
        .modal-header
          %h5#mapModalLabel.modal-title Map
          %button.btn-close{ type: "button", "data-bs-dismiss" => "modal", "aria-label" => "Close" }
        .modal-body
          = render partial: 'map', locals: { game: @game, tiles: @tiles, game_users: @game_users }

        .modal-footer
          %button.btn.btn-secondary{ type: "button", "data-bs-dismiss" => "modal" } Close

  / Inventory Modal
  .modal.fade#inventoryModal{ tabindex: "-1", "aria-labelledby" => "inventoryModalLabel", "aria-hidden" => "true" }
    .modal-dialog
      .modal-content
        .modal-header
          %h5#inventoryModalLabel.modal-title Inventory
          %button.btn-close{ type: "button", "data-bs-dismiss" => "modal", "aria-label" => "Close" }
        .modal-body
          / Inventory Items
          - current_game_user = @game_users.find_by(user: @current_user)
          - if current_game_user && current_game_user.equipment.present?
            %ul
              - current_game_user.equipment.each do |item|
                %li= item
          - else
            %p No items in your inventory.
        .modal-footer
          %button.btn.btn-secondary{ type: "button", "data-bs-dismiss" => "modal" } Close

